{"ast":null,"code":"import _classCallCheck from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/b.dixon/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport instruments from \"./instruments.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      instruments: instruments,\n      clickedImage: [],\n      score: 0\n    };\n\n    _this.cardClick = function (event) {\n      var currentInstr = event.target.alt;\n      var InstrAlreadyClicked = _this.state.clickedImage.indexOf(currentInstr) > -1; // If card clicked has already been selected, the cards and game are reset\n\n      if (InstrAlreadyClicked) {\n        _this.setState({\n          instruments: _this.state.instruments.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedImage: [],\n          score: 0\n        });\n\n        alert(\"Sorry, you lose. Let's try again\");\n      } else {\n        // If card clicked hasn't been selected, your score will increase by 1 and cards reordered\n        _this.setState({\n          instruments: _this.state.instruments.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedImage: _this.state.clickedImage.concat(currentInstr),\n          score: _this.state.score + 1\n        }, // If you win...\n        function () {\n          if (_this.state.score === 12) {\n            alert(\"You win!!! Congrats!\");\n\n            _this.setState({\n              instruments: _this.state.instruments.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedImage: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Order to be rendered\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.instruments.map(function (instruments) {\n        return React.createElement(Card, {\n          clickedImage: _this2.clickedImage,\n          id: instruments.id,\n          key: instruments.id,\n          image: instruments.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/b.dixon/clicky-game/src/App.js"],"names":["React","Component","Card","Footer","Header","Navbar","instruments","App","state","clickedImage","score","cardClick","event","currentInstr","target","alt","InstrAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","concat","map","id","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport instruments from \"./instruments.json\";\n\nclass App extends Component {\n  // Setting this.state.instruments to the instruments json array\n  state = {\n    instruments,\n    clickedImage: [],\n    score: 0\n  };\n\n  // When you click an image, it is taken out of the array\n  cardClick = event => {\n    const currentInstr = event.target.alt;\n    const InstrAlreadyClicked = this.state.clickedImage.indexOf(currentInstr) > -1;\n\n    // If card clicked has already been selected, the cards and game are reset\n    if (InstrAlreadyClicked) {\n      this.setState({\n        instruments: this.state.instruments.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedImage: [],\n        score: 0\n      });\n      alert(\"Sorry, you lose. Let's try again\");\n    } else {\n      // If card clicked hasn't been selected, your score will increase by 1 and cards reordered\n      this.setState({\n        instruments: this.state.instruments.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }), \n        clickedImage: this.state.clickedImage.concat(\n          currentInstr\n          ),\n          score: this.state.score + 1\n        },\n        // If you win...\n        () => {\n          if (this.state.score === 12) {\n            alert(\"You win!!! Congrats!\")\n            this.setState({\n              instruments: this.state.instruments.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedImage: [], \n              score: 0\n            });\n          }\n        }\n      )\n    }\n  };\n\n  // Order to be rendered\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={ this.state.score }\n        />\n        <Header />\n        <div className=\"wrapper\">\n          { this.state.instruments.map(instruments => (\n            <Card\n              clickedImage={ this.clickedImage }\n              id={ instruments.id }\n              key={ instruments.id }\n              image={ instruments.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}