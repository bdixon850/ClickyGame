{"ast":null,"code":"import _classCallCheck from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/b.dixon/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/b.dixon/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport instruments from \"./instruments.json\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      instruments: instruments,\n      score: 0,\n      highScore: 0\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.highScore) {\n        _this.setState({\n          highScore: _this.state.score\n        }, function () {\n          console.log(this.state.highScore);\n        });\n      }\n\n      _this.state.instruments.forEach(function (card) {\n        card.count = 0;\n      });\n\n      alert(\"Game Has Ended! \\nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.clickCount = function (id) {\n      _this.state.instruments.find(function (o, i) {\n        if (o.id === id) {\n          if (instruments[i].count === 0) {\n            instruments[i].count = instruments[i].count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.instruments.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.gameOver();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        highScore: this.state.highScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.instruments.map(function (card) {\n        return React.createElement(Card, {\n          clickCount: _this2.clickCount,\n          id: card.id,\n          key: card.key,\n          image: card.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/b.dixon/clicky-game/src/App.js"],"names":["React","Component","Card","Wrapper","Header","Navbar","instruments","App","state","score","highScore","gameOver","setState","console","log","forEach","card","count","alert","clickCount","id","find","o","i","sort","Math","random","map","key","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport instruments from \"./instruments.json\";\nimport './App.css';\n\nclass App extends Component {\n  // Setting this.state.instruments to the instruments json array\n  state = {\n    instruments,\n    score: 0,\n    highScore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({ highScore: this.state.score}, function() {\n        console.log(this.state.highScore);\n      });\n    }\n    this.state.instruments.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Has Ended! \\nscore: ${ this.state.score}`);\n    this.setState({ score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.instruments.find((o, i) => {\n      if(o.id === id) {\n        if(instruments[i].count === 0) {\n          instruments[i].count = instruments[i].count + 1;\n          this.setState({ score: this.state.score + 1}, function() {\n            console.log(this.state.score);\n          });\n          this.state.instruments.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={ this.state.score} \n          highScore={ this.state.highScore }\n        />\n        <Header/>\n        <Wrapper>\n          {this.state.instruments.map(card => ( \n            <Card\n              clickCount={ this.clickCount }\n              id={ card.id }\n              key={ card.key }\n              image={card.image}\n            />\n          ))}\n        </Wrapper>\n\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}